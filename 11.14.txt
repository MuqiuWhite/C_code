/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


/**
 * Note: The returned array must be malloced, assume caller calls free().
      返回的数组必须被malloc，假设他最后被free了。
 */
int size(struct TreeNode* root)
{
    if(root==NULL)
        return 0;
    return size(root->left)+size(root->right)+1;
}
void _p(struct TreeNode*root,int *a,int *i)
{
    if(root==  NULL)
        return;
    a[(*i)++]=root->val;
    _p(root->left,a,i);
    _p(root->right,a,i);
}
int* preorderTraversal(struct TreeNode* root, int* returnSize){
                                              // 输出型参数，大小
    int i=0;
    int s=size(root);
    int* a=(int*)malloc(sizeof(int)*s);
    _p(root,a,&i);
    *returnSize=s;
    return a;
}